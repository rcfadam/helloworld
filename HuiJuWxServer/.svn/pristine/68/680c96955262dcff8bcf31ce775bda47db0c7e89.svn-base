angular.module('myApp.services', [])

.factory('UtilFactory', function() {

	return {
		getQueryString: function(str) {
			
			var reg = new RegExp("(^|&)"+ str +"=([^&]*)(&|$)");
			var r = window.location.search.substr(1).match(reg);
			if(r!=null) {
				return  unescape(r[2]); 
			}
			return null;
		},
		setBodyTitle: function(data) {
			var $body = $('body');
  			document.title = data;
  			var $iframe = $("<iframe style='display:none;' src='/favicon.ico'></iframe>");
  			$iframe.on('load',function() {
    			setTimeout(function() {
      				$iframe.off('load').remove();
    			}, 0);
  			}).appendTo($body);
		},
		bytesToString: function(data) {
			var str = '';
			for (var i = 0; i < data.length; i++) {
				var temp = data.charCodeAt(i).toString(16).toUpperCase();
				if (temp.length == 1) {
					temp = '0' + temp;
				}
				str += temp;
			}
			return str;
		},
		stringToBytes: function(data) {
			var pos = 0;
			var len = data.length;
			if (len % 2 != 0) {return null;}
			len /= 2;
			var hexArray = new Array();
			for (var i = 0; i < len; i++) {
				var s = data.substr(pos, 2);
				var v = parseInt(s, 16);
				hexArray.push(v);
				pos += 2;
			}
			return hexArray;
		}
	}
})

.factory('ModelFactory', function(){

	var openid = '';
	var deviceList = {};
	var selectedDeviceId = '';
	var selectedKey = '';
	var lockId = "";
	var deviceListFromWX = {};
	var curConnDeviceId = "";//当前正在连接的设备id
	return {
		setOpenId: function(data) {
			openid = data;
		},
		getOpenId: function() {
			return openid;
		},
		setDeviceListFromWX: function(data) {
			deviceListFromWX = data;
        },
        setDeviceListFromServer: function(data) {
        	 deviceList = data;
        },
        removeDevice: function(data) {
        	delete deviceList[data];
        },
        updateKeyState:function(data){
        	for (var i = 0; i < deviceList.length; i++) {
				var device = deviceList[i];
				var keyList = device.keyList;
				for (var j = 0; j < keyList.length; j++) {
					if(keyList[j].id == data.id){
						keyList[j].state = data.state;
					}
				}
			}
        },
        removeKey:function(data){
        	for (var i = 0; i < deviceList.length; i++) {
				var device = deviceList[i];
				var keyList = device.keyList;
				for (var j = 0; j < keyList.length; j++) {
					if(keyList[j].id == data.id){
						keyList.splice(j,1);
					}
				}
			}
        },
		getDeviceList: function() {
			if(deviceList.length>0){
				for (var i = 0; i < deviceList.length; i++) {
					var device = deviceList[i];
					var keyList = device.keyList;
					for (var j = 0; j < keyList.length; j++) {
						if(keyList[j].state=="2"){
							keyList[j].stateStr = "已停用";
						}else if(keyList[j].state=="1"){
							keyList[j].stateStr = "已启用";
						}else{
							keyList[j].stateStr = "已停用";
						}
					}
					device.locktb.state = deviceListFromWX[i].state=="connected"?"连接中":"未连接"; 
					curConnDeviceId = deviceListFromWX[i].state=="connected"?deviceListFromWX[i].deviceId:"";
				}
			}
			return deviceList;
		},
		setSelectedDevice: function(data) {
			selectedDeviceId = data;
		},
		getSelectedDevice: function() {
			return selectedDeviceId;
		},
		setSelectedKey: function(data) {
			selectedKey = data;
		},
		getSelectedKey: function() {
			return selectedKey;
		},
		setSelectedLockId:function(data){
			lockId = data;
		},
		getSelectedLockId:function(){
			return lockId;
		},
		getCurConnDeviceId:function(){
			return curConnDeviceId;
		},
	}
}); 